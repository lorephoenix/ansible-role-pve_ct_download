---
# tasks file for pve_ct_download
#
#  ████████╗ █████╗ ███████╗██╗  ██╗
#  ╚══██╔══╝██╔══██╗██╔════╝██║ ██╔╝
#     ██║   ███████║███████╗█████╔╝
#     ██║   ██╔══██║╚════██║██╔═██╗
#     ██║   ██║  ██║███████║██║  ██╗
#     ╚═╝   ╚═╝  ╚═╝╚══════╝╚═╝  ╚═╝
#

# -----------------------------------------------------------------------------
# Retrieves a list of nodes in the Proxmox cluster.
# -----------------------------------------------------------------------------
- name: (pve_ct_download) | use_token | Retrieve Proxmox node information
  community.general.proxmox_node_info:
    api_host: "{{ pve_host }}"                           # The hostname or IP address of the API Proxmox server.
    api_port: "{{ pve_port | default(8006) }}"           # The port to connect to (default is 8006 for Proxmox API).
    api_token_id: "{{ pve_tokenid.split('!')[1] }}"      # Extracts the token ID part of the API token.
    api_token_secret: "{{ pve_token_secret }}"           # The secret associated with the API token for authentication.
    api_user: "{{ pve_tokenid.split('!')[0] }}"          # Extracts the username from the API token.
    validate_certs: "{{ pve_validate_certs | default(false) }}" # Whether to validate SSL certificates.
  register: pcl_parsed_nodes
  tags:
    - prerequisite

# -----------------------------------------------------------------------------
# Retrieve Proxmox storage information.
# -----------------------------------------------------------------------------
- name: (pve_ct_download) | use_token | Retrieve Proxmox storage information
  community.general.proxmox_storage_info:
    api_host: "{{ pve_host }}"                           # The hostname or IP address of the API Proxmox server.
    api_port: "{{ pve_port | default(8006) }}"           # The port to connect to (default is 8006 for Proxmox API).
    api_token_id: "{{ pve_tokenid.split('!')[1] }}"      # Extracts the token ID part of the API token.
    api_token_secret: "{{ pve_token_secret }}"           # The secret associated with the API token for authentication.
    api_user: "{{ pve_tokenid.split('!')[0] }}"          # Extracts the username from the API token.
    validate_certs: "{{ pve_validate_certs | default(false) }}" # Whether to validate SSL certificates.
  register: this
  tags:
    - prerequisite

# -----------------------------------------------------------------------------
# Import task the current playbook for subsequent execution
# -----------------------------------------------------------------------------
- name: (pve_ct_download) | use_token | Import 'set_facts' task statically
  ansible.builtin.import_tasks: "facts.yml"
  tags:
    - prerequisite

# -----------------------------------------------------------------------------
# Downloads the latest template image to the specified storage on the
# selected nodes.
# -----------------------------------------------------------------------------
- name: (pve_ct_download) | use_token | Download Proxmox appliance container template(s)
  community.general.proxmox_template:
    api_host: "{{ pve_host }}"                           # The hostname or IP address of the API Proxmox server.
    api_port: "{{ pve_port | default(8006) }}"           # The port to connect to (default is 8006 for Proxmox API).
    api_token_id: "{{ pve_tokenid.split('!')[1] }}"      # Extracts the token ID part of the API token.
    api_token_secret: "{{ pve_token_secret }}"           # The secret associated with the API token for authentication.
    api_user: "{{ pve_tokenid.split('!')[0] }}"          # Extracts the username from the API token.
    validate_certs: "{{ pve_validate_certs | default(false) }}" # Whether to validate SSL certificates.
    node: "{{ item.0 }}"
    state: "present"
    storage: "{{ item.1 }}"
    template: "{{ item.2 }}"
    timeout: "{{ pve_timeout | default(0) }}"
    force: "{{ pve_force | default(false) }}"
  loop: "{{ query('nested', pcl_nodes, pcl_filtered_storages, pcl_latest_image) }}"
