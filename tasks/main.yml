---
# tasks file for pve_ct_download
#
#  ████████╗ █████╗ ███████╗██╗  ██╗
#  ╚══██╔══╝██╔══██╗██╔════╝██║ ██╔╝
#     ██║   ███████║███████╗█████╔╝
#     ██║   ██╔══██║╚════██║██╔═██╗
#     ██║   ██║  ██║███████║██║  ██╗
#     ╚═╝   ╚═╝  ╚═╝╚══════╝╚═╝  ╚═╝
#

# -----------------------------------------------------------------------------
# Load variables from files, dynamically within a task
# -----------------------------------------------------------------------------
- name: (pve_ct_download) | main | Load OS dependent variables
  ansible.builtin.include_vars: '{{ item_os }}'
  with_first_found:
    - files:
        - '{{ ansible_distribution | lower }}_{{ ansible_distribution_major_version | lower }}.yml'
        - '{{ ansible_distribution | lower }}.yml'
        - '{{ ansible_os_family | lower }}_{{ ansible_distribution_major_version | lower }}.yml'
        - '{{ ansible_os_family | lower }}.yml'
      skip: false
  loop_control:
    loop_var: item_os
  tags:
    - prerequisite

# -----------------------------------------------------------------------------
# Ensure variable(s) meets condition(s)
# -----------------------------------------------------------------------------
- name: (pve_ct_download) | main | OS is supported.
  ansible.builtin.assert:
    that: os_supported == True

# -----------------------------------------------------------------------------
# Use universal package manager to install required package(s)
# -----------------------------------------------------------------------------
- name: (pve_ct_download) | main | Ensure that the Linux packages are installed
  become: true
  ansible.builtin.package:
    name: '{{ item }}'
    state: present
  with_items: "{{ linux_pkgs }}"
  tags:
    - prerequisite

# -----------------------------------------------------------------------------
# Manage Python library dependencies
# -----------------------------------------------------------------------------
- name: (pve_ct_download) | main | Install python package
  ansible.builtin.pip:
    break_system_packages: true
    name: "{{ item }}"
    state: present
  with_items: "{{ python_module_pkgs }}"
  when:
    - python_module_pkgs is defined
    - python_module_pkgs|length > 0
  tags:
    - prerequisite

# -----------------------------------------------------------------------------
# Import task the current playbook for subsequent execution
# -----------------------------------------------------------------------------
- name: (pve_ct_download) | main | Import 'preliminary' task statically
  ansible.builtin.import_tasks: "preliminary.yml"
  tags:
    - preliminary
    - prerequisite
    - storage_template

# -------------------------------------------------------------------------
# Dynamically include the task a list
# -------------------------------------------------------------------------
- name: (pve_ct_download) | main | Dynamically include the task 'use_token'.
  ansible.builtin.include_tasks: "use_token.yml"
  when:
    - pve_password is none or pve_password is undefined
    - pve_token_secret is not none
  tags:
    - prerequisite
    - storage_container
    - storage_template

# -------------------------------------------------------------------------
# Import task the current playbook for subsequent execution
# -------------------------------------------------------------------------
- name: (pve_ct_download) | main | Dynamically include the task 'use_password'.
  ansible.builtin.include_tasks: "use_password.yml"
  when:
    - pve_password is defined
    - pve_password is not none
  tags:
    - prerequisite
    - storage_container
    - storage_template
